#!/usr/local/bin/ruby

$VERBOSE = false
require 'rubygems'
require 'aws-sdk'

opsworks = AWS::OpsWorks.new().client
own_instance_id = ARGV[0] || ENV['OpsWorksInstanceID'] || "<%= node[:opsworks][:instance][:id] %>"
puts "Running on AWS OpsWorks instance #{own_instance_id.inspect}" if $VERBOSE

stack_id = opsworks.describe_instances(:instance_ids => [own_instance_id])[:instances][0][:stack_id]
puts "Running on AWS OpsWorks stack #{stack_id.inspect}" if $VERBOSE
online_instance_ids = opsworks.describe_instances(:stack_id => stack_id)[:instances].select{|instance| instance[:status] == 'online'}.map{|instance| instance[:instance_id]} - [own_instance_id]

stack_apps = opsworks.describe_apps(:stack_id => stack_id)[:apps]
puts "Found the following apps on the stack: #{stack_apps.inspect} - Looking for one named #{ENV['JOB_NAME'].inspect}" if $VERBOSE
app = stack_apps.detect{|app| name = app[:shortname] == ENV['JOB_NAME']}

puts "Found a matching app for this job: #{app.inspect}" if $VERBOSE
$stdout.flush
app_id = app[:app_id]

instances = opsworks.describe_instances(:stack_id => stack_id)[:instances]
instance_ids, instance_hostnames = [], []

online_instances = opsworks.describe_instances(:stack_id => stack_id)[:instances].select do |instance|
  instance[:status] == 'online' &&
  instance[:instance_id] != own_instance_id
end

if online_instances.any?
  online_instances.each do |instance|
    instance_ids << instance[:instance_id]
    instance_hostnames << instance[:hostname]
  end

  puts 'deploying to'
  instance_hostnames.sort.each do |instance_hostname|
    puts "* #{instance_hostname}"
  end
  $stdout.flush

  deployment = opsworks.create_deployment(
    :stack_id => app[:stack_id],
    :app_id => app[:app_id],
    :instance_ids => instance_ids,
    :command => {:name => 'deploy'},
    :comment => "Jenkins build #{ENV['BUILD_ID']} - commit ID #{ENV['GIT_COMMIT']}"
  )

  while (deployment = opsworks.describe_deployments(:deployment_ids => [deployment[:deployment_id]])[:deployments][0])[:status] == 'running'
    puts "Waiting for deployment to finish - current status: #{deployment[:status].inspect}"
    sleep 5
  end
  puts deployment[:status]
else
  puts 'no online instance, not deploying'
end